<!--
  ~ Copyright (c) 2014 Navis LLC. All Rights Reserved.
  ~
  -->
<zk xmlns:w="client">

    <style>
        .noscroll {
            border-right: none;
        }
        .noscroll .z-grid-body {
            overflow: hidden !important;
        }
        .notext {
            opacity: 0;
        }
        .rotate {
            -webkit-transform: rotate(270deg);
            -moz-transform: rotate(270deg);
            -o-transform: rotate(270deg);
            -ms-transform: rotate(270deg);
            transform: rotate(270deg);
        }
    </style>
    <zscript><![CDATA[
        import java.util.List;
        import com.navis.framework.metafields.MetafieldId;
        import com.navis.framework.presentation.util.PresentationConstants;
        import com.navis.framework.presentation.context.RecapContext;
        RecapContext recapContext = arg.get(RecapContext.RECAP_CONTEXT);
        Object apply = arg.get(PresentationConstants.CONTROLLER);
        String horizontalAxisLabel = recapContext.getHorizontalAttribute().getLabel();
        MetafieldId horizontalAxisMfId = recapContext.getHorizontalAttribute().getRawData();
        String verticalAxisLabel   = recapContext.getVerticalAttribute().getLabel();
        MetafieldId verticalAxisMfId = recapContext.getVerticalAttribute().getRawData();
        List actionCommands = arg.get("recapActionCommands");
        Object savedformatLov = new com.navis.framework.zk.view.ZRecapSavedFormatLov();
        savedformatLov.setActionCommand(actionCommands);
        savedformatLov.setXAttribute(horizontalAxisMfId);
        savedformatLov.setYAttribute(verticalAxisMfId);
        savedformatLov.setRecapContext(recapContext);
        savedformatLov.setRecapComposer(apply);
	]]></zscript>

    <vlayout id="vlayout" spacing="0" vflex="1" apply="${apply}">
        <hbox spacing="0" hflex="min" vflex="min">
            <zPopupMenuButton id="popupMenuButton" label="Actions"/>
            <zPopupLov id="savedFormatLov" use="${savedformatLov}"/>
        </hbox>
		<div align="center" >
			<!-- Display the X attribute at the top -->
			<label onDoubleClick='var val=self.getAttribute("mfid"); $composer.selectHorizontalAttribute(val);' value="${horizontalAxisLabel}">
				<custom-attributes mfid="${horizontalAxisMfId}"/>
			</label>
		</div>
        <hlayout id="hlayout" spacing="0" vflex="1">
            <attribute name="onCreate"><![CDATA[
			  import org.zkoss.zk.ui.HtmlBasedComponent;
			  import org.zkoss.zk.ui.util.Clients;
			  import com.navis.framework.zk.view.ZPopupMenuButton;
			  Clients.resize(self.getFellow("recapContent"));
			  ZPopupMenuButton button = self.getFellow("popupMenuButton");
			  button.setCommands(actionCommands);
			  button.setContextualParent(self);
			  // Enable all menu items.  TODO check privileges
              for (Map.Entry entry : button.getCommandMap().entrySet()) {
                Component component = entry.getValue();
                component.setAttribute(ZFrmConsts.ACCESS_ALLOWED, true);
              }
			]]></attribute>
            <attribute name="onActionClick"><![CDATA[
			  import com.navis.framework.presentation.command.IBaseCommand;
              try {
                  IBaseCommand command = (IBaseCommand) event.getData();
				  Map contextAttrs = new HashMap();  // arguments to the action command execution
				  contextAttrs.put(RecapContext.RECAP_CONTEXT, recapContext); // recapContext
				  contextAttrs.put(PresentationConstants.CONTROLLER, $composer);  // controller
                  command.execute(contextAttrs);
              } catch (Exception e) {
                  $composer.getLogger().error(e);
              }
            ]]></attribute>
            <vbox spacing="0" sclass="rotate" align="center" pack="center" hflex="min" vflex="1">
                <!-- Display the Y attribute at the left side, rotate 90 degree -->
                <label onDoubleClick='var val=self.getAttribute("mfid"); $composer.selectVerticalAttribute(val);' value="${verticalAxisLabel}">
				    <custom-attributes mfid="${verticalAxisMfId}"/>
				</label>
            </vbox>
            <!-- Display the first frozen column at the left side -->
            <grid id="frozen" sclass="noscroll" hflex="min" vflex="min">
                <custom-attributes org.zkoss.zul.nativebar= "true" />
                <columns>
                    <column label="t" sclass="notext" align="center" hflex="min" vflex="min"/>
                </columns>
                <rows>
                    <!-- Display the vertical row headers  -->
                    <row forEach="${$composer.verticalAxisElements}">
                        <cell>
                            <label sclass="recapRowHeader" value="${each.label}"/>
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(0)}"/>
                            <label sclass="recapRowHeader" value="${$composer.getCustomCellLabel(0)}" if="${$composer.doCommandShowValue(0)}"/>
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(1)}"/>
                            <label sclass="recapRowHeader" value="${$composer.getCustomCellLabel(1)}" if="${$composer.doCommandShowValue(1)}"/>
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(2)}"/>
                            <label sclass="recapRowHeader" value="${$composer.getCustomCellLabel(2)}" if="${$composer.doCommandShowValue(2)}"/>
                        </cell>
                    </row>
                    <row id="faker"></row>
                </rows>
            </grid>
            <grid id="recapContent" sclass="recapGrid" hflex="min" vflex="min">
                <attribute w:name="_afterCalcSize"><![CDATA[
					function() {
						this.$_afterCalcSize(); //call the original method
						var faker = zk.Widget.$('$faker');
						if (zk(this.ebody).hasVScroll()) {
							jq(faker.$n()).height(jq.scrollbarWidth() + 'px');
						}
					}
				]]></attribute>
                <attribute w:name="onScroll"><![CDATA[
					var frozen = zk.Widget.$('$frozen');
					frozen.ebody.scrollTop = this.ebody.scrollTop;
				]]></attribute>
                <columns>
                    <!-- Display column headers -->
                    <zk forEach="${$composer.horizontalAxisElements}">
                        <zk if="${each.label=='--'}">
                            <column sclass="recapColumHeader" label="${each.label}" align="center" width="50px" vflex="min"/>
                        </zk>
                        <zk if="${each.label!='--'}">
                            <column sclass="recapColumHeader" label="${each.label}" align="center" hflex="min" vflex="min"/>
                        </zk>
                    </zk>
                </columns>
                <rows>
                    <!-- Display recap counts for each row -->
                    <row forEach="${$composer.verticalAxisElements}">
                        <custom-attributes master="${each.rawData}"/> <!-- each here is an AxisElement in vertical direction -->
                        <custom-attributes yIndex="${forEachStatus.index}"/>
                        <cell forEach="${$composer.horizontalAxisElements}"
                              onDoubleClick='var x = self.getAttribute("x"); var y = self.getAttribute("y"); $composer.drillIntoCell(x, y);'>
                            <custom-attributes y="${master}"/>
                            <custom-attributes x="${each.rawData}"/> <!-- each here is an AxisElement in horizontal direction -->
                            <label sclass="recapCell" value="${$composer.getCellValue(forEachStatus.index, yIndex)}"/>
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(0)}"/>
                            <label sclass="recapCell2" value="${$composer.getCustomCellValue(0, forEachStatus.index, yIndex)}" if="${$composer.doCommandShowValue(0)}" />
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(1)}"/>
                            <label sclass="recapCell3" value="${$composer.getCustomCellValue(1, forEachStatus.index, yIndex)}" if="${$composer.doCommandShowValue(1)}" />
                            <separator orient="horizontal" height="0px" visible="${$composer.doCommandShowValue(2)}"/>
                            <label sclass="recapCell4" value="${$composer.getCustomCellValue(2, forEachStatus.index, yIndex)}" if="${$composer.doCommandShowValue(2)}" />
                        </cell>
                    </row>
                </rows>
            </grid>
        </hlayout>
    </vlayout>

</zk>